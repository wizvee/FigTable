"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserAgent = exports.withUserAgent = undefined;

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _mobileDetect = require("mobile-detect");

var _mobileDetect2 = _interopRequireDefault(_mobileDetect);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var getUserAgent = function getUserAgent() {
  var md = new _mobileDetect2.default(window.navigator.userAgent);
  var state = {
    ua: {
      mobile: md.mobile(),
      phone: md.phone(),
      tablet: md.tablet(),
      os: md.os(),
      md: md
    }
  };
  return state;
};

var withUserAgent = exports.withUserAgent = function withUserAgent(ComposedComponent) {
  return function (_Component) {
    _inherits(_class, _Component);

    function _class(props) {
      _classCallCheck(this, _class);

      var _this = _possibleConstructorReturn(this, (_class.__proto__ || Object.getPrototypeOf(_class)).call(this, props));

      _this.state = getUserAgent();
      return _this;
    }

    _createClass(_class, [{
      key: "render",
      value: function render() {
        return _react2.default.createElement(ComposedComponent, _extends({ ua: this.state.ua }, this.props));
      }
    }]);

    return _class;
  }(_react.Component);
};

var UserAgent = exports.UserAgent = function (_Component2) {
  _inherits(UserAgent, _Component2);

  function UserAgent(props) {
    _classCallCheck(this, UserAgent);

    var _this2 = _possibleConstructorReturn(this, (UserAgent.__proto__ || Object.getPrototypeOf(UserAgent)).call(this, props));

    _this2.state = getUserAgent();
    return _this2;
  }

  _createClass(UserAgent, [{
    key: "render",
    value: function render() {
      var _props = this.props,
          children = _props.children,
          render = _props.render;

      if (children) {
        return children(this.state);
      }
      if (render) {
        return render(this.state);
      }
      console.error("Component UserAgent:", "no children or render prop are present");
      return null;
    }
  }]);

  return UserAgent;
}(_react.Component);